plugins {
    id 'java'
    id 'war'
    id 'checkstyle'
}
apply from: 'version.gradle'
group = 'ru.baddecision'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

war {
    archiveFileName = 'blog.war'
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-parameters")
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework:spring-webmvc:${versions.spring}"
    implementation "org.springframework.data:spring-data-jdbc:${versions.springDataJdbc}"
    implementation "org.postgresql:postgresql:${versions.postgresql}"
    implementation "org.thymeleaf:thymeleaf-spring6:${versions.thymeleaf}"
    implementation "org.thymeleaf:thymeleaf:${versions.thymeleaf}"
    implementation "org.thymeleaf.extras:thymeleaf-extras-java8time:${versions.thymeleafExtrasJava8time}"
    implementation "org.apache.commons:commons-lang3:${versions.commonsLang}"
    implementation "jakarta.servlet:jakarta.servlet-api:${versions.jakartaServletApi}"

    compileOnly "org.projectlombok:lombok:${versions.lombok}"
    annotationProcessor "org.projectlombok:lombok:${versions.lombok}"

    testImplementation platform("org.junit:junit-bom:${versions.junitBom}")
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation "org.mockito:mockito-core:${versions.mockito}"
    testImplementation "org.mockito:mockito-junit-jupiter:${versions.mockito}"
    testImplementation "org.springframework:spring-test:${versions.spring}"
    testImplementation "org.testcontainers:postgresql:${versions.testcontainers}"
}

test {
    useJUnitPlatform()
}